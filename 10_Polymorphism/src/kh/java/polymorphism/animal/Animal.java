package kh.java.polymorphism.animal;
/*
 * 메소드 구현 강제화
 * 객체화 할 수 없다. new 추상클래스(),new인터페이스() ->객체생성불가
 * 자식클래스에 대한 규격을 제공! 부모클래스 타입으로 override할 메소드를 모두 사용가능.
 * (이둘의 공통점 : 1.자식클래스에 대해 메소드 구현 강제화 2.new 추상클래스()X, new 인터페이스()X ->객체생성불가)
 * 
 * 1. 추상클래스(일반클래스 - 일반필드/일반메소드) extends키워드 사용가능 extends(확장)
 * 		- 추상메소드가 1개 이상 가지고 있다면, 해당클래스는 반드시 추상클래스여야 한다.
 * 		- 객체 생성 방지을 방지하기 위해 추상메소드가 없어도 추상클래스로 만들 수 있다.
 * 		- 추상메소드(미완성메소드) abstract키워드를 가지며, 메소드 몸통부X.
 * 		- 자식클래스에 반드시 완성(재작성)해야할 메소드 -> 메소드 구현 강제화. 
 * 
 * 2. 인터페이스 (추상메소드 구현강제화만을 목적으로하는 부모타입, ) implements(구현)
 * 		- 추상메소드와 상수필드만을 가질 수 있다.
 * 		- 오로지 주제만을 강조.
 * 		- 다중구현이 가능
 * 		- 인터페이스간 상속은 extends키워드를 사용
 * -	- 일반클래스에서 인터페이스스 구현시 implements사용
 * 		- JDK8부터 default / static메소드 사용가능
 */
public abstract class Animal {
	
	String name;

	public void talk_to_me() {
		System.out.println("안녕하세요, 저는 동물입니다.");
	}
	/*
	 * 자식클래스의 구체적인 공격메소드를 추상화처리.
	 * 
	 * 
	 * 메소드의 구현 강제화 : 추상클래스 & 추상 메소드
	 */
	
	
	
	public abstract void attack(); 
		
	
}
